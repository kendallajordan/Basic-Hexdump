 Name: Kendall Jordan
 Project: Basic Hexdump Program
 File: README
 Last Date Modified: Feb 18, 2019

 Project Description:
 	This project is a basic hexadecimal file dump program, or 'xbd'.

 	It opens a regular type file (containing binary or text/ASCII content),
 	reads every byte in the file, and writes it's hex-value and printable
 	(human-readable) character to standard output. 

 	Bytes forming non-printable characters shall print a '.' character instead.

 File manifest:
 	README
 	Makefile
 	hexdump.cpp
 	hexdump.h

 Compile instructions:
 	1) Open the command terminal.
 	2) Move into the directory containing all the files of this project.
 	3) Run the following command to compile the executable file:
 			make
 	4) The following object file(s) will now be in the project directory:
 			hexdump.o
 	5) The following executable file(s) will now be in the project directory:
 			xbd

 Operating instructions:
 	1) Open the command terminal.
 	2) Move into the directory containing all the files of this project.
 	3) Run either of the following commands:
 			./xbd <FILENAME>
 			./xbd -b <FILENAME>
 	4) Replace <FILENAME> with a file from the project directory.
 	5) The first command in step 3 will execute a basic hexdump program,
 		dumping the specified file in ASCII/hex format.
 	6) The second command in step 3 will execute a "binary dump",
 		dumping the specified file in binary format.

 	** WARNING - This program was built to only open 
 	regular file types (binary or text/ASCII content). **

 Design decisions:
 	- toHex and toBin are identical in structure, with differences
 	  in the number of bytes to read and write for each
 	  (16 bytes for hex, 6 for binary).


 Extra features:
 	- Included a function createHeader which creates
 	  a header table at the start of the hexdump/binary dump to
 	  label and identify the address, data values, and printable character
 	  columns.

 Known deficiencies or bugs:
 	- This program was built to only open regular file types (binary
 	  or text/ASCII content). Running other file types will lead to unreadable
 	  and incorrect output.

 Lessons Learned:
 	- Working on this project has taught me, the developer, the basics of 
 	  converting between decimal, hexadecimal, and binary, as well as 
 	  address locations of bytes within a file. 
 	  
 	- Creating a Makefile has also
 	  given me better understanding on the assembly of a source file into 
 	  an object file and the linkage of object files to produce
 	  an executable file.
